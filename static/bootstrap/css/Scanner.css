<!-- The process of this subsystem is scan -> identify -> concatenate -> upload
                                        ^          |
                                        |__________|                               -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
</head>
<body>
    <div id="container">
    <video autoplay playsinline class='hideVideo' id="videoElement">
    </video>
    <canvas id="canvas"  width="1440" height="1080  "></canvas>
    </div>

    <div class = 'video'>
        <img title="ADAM" id="photo"  width="1440"  height="1080">
        <h1>video</h1>
    </div>

    <script type="module" charset="utf-8">
        import { io } from "https://cdn.socket.io/4.3.2/socket.io.esm.min.js";

        const socket = io();

        socket.on('connect', function(){
        console.log("Init")
        });

        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');
        const video = document.querySelector("#videoElement");
        var hideVideo = document.getElementsByClassName("hideVideo")[0];
        hideVideo.style.display = "none";
        canvas.style.display = "none";
        

        if (navigator.mediaDevices.getUserMedia) {
            let stream = null;

            try {
                stream = await navigator.mediaDevices.getUserMedia(constraints);
                /* use the stream */
            } catch (err) {
                /* handle the error */
            }
            navigator.mediaDevices.getUserMedia({   video: { frameRate: { ideal: 1, max: 1 } },
                                                    width: { ideal: 1440 },
                                                    height: { ideal: 1080 }
                                                })
            .then(function (stream) {
                video.srcObject = stream;
                video.play();
            })
            .catch(function (err0r) {

            });
        }

        const FPS = 1;
        setInterval(() => {
        context.drawImage(video, 0, 0, 1440, 1080);
        var data = canvas.toDataURL('image/jpg',0.95);
        socket.emit('image', data);
        }, 1000/FPS);
        

        socket.on('response_back', function(image){
        photo.setAttribute('src', image );
        });

    </script>
</body>
</html>